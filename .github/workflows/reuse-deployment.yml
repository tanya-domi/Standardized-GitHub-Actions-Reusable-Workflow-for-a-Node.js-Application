name: Deployment - Reusable Workflow

on:
    workflow_call: 
      inputs:
        mongodb-uri:
          required: true
          type: string
        kubectl-version:
            description: Provide the required Kubectl version
            default: v1.26.0
            required: false
            type: string
        k8s-manifest-dir:
            description: Directory containing Kubernetes manifests files
            default: kubernetes/
            required: true
            type: string 
        environment:
            description: Provide the Deployment Environment
            default: dev
            required: true
            type: string
           
      secrets:
        mongodb-password:
          required: true
        CI_ROLE:
          required: true


jobs:
    reuse-deploy:
        runs-on: ubuntu-latest
        outputs:
            alb_host: ${{ steps.fetch-alb-host.outputs.ALB_HOST }}
        environment: 
            name: ${{ inputs.environment }}
        
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            
            - name: Install kubectl CLI
              uses: azure/setup-kubectl@v3
              with:
                version: '${{ inputs.kubectl-version }}'

            - name: Configure AWS Credentials with OIDC
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.CI_ROLE }}
                aws-region: eu-north-1

            - name: Configure kubectl
              run: aws eks --region eu-north-1 update-kubeconfig --name my-eks-cluster


            - name: Update K8s manifests with image tag
              run: |
                sed -i "s|<commit-sha>|${{ github.sha }}|g" kubernetes/development/deployment.yaml
                sed -i "s|<commit-sha>|${{ github.sha }}|g" kubernetes/production/deployment.yaml

            - name: Fetch Kubernetes Cluster Details
              run: |
                kubectl version --short
                echo ---------------------------------------------------
                kubectl get nodes
               
            - name: Check files
              run: |
                cat ${{ inputs.k8s-manifest-dir }}*.yaml

            - name: Create MongoDB secret
              run: kubectl -n dev create secret generic mongo-db-creds --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password }} --dry-run=client -o yaml | kubectl apply -f -
            
            - name: Deploy to Dev Env
              run: |
                kubectl apply -f ${{ inputs.k8s-manifest-dir }}

            - name: Fetch ALB Host
              id: fetch-alb-host
              run: |
                for i in {1..20}; do
                  HOST=$(kubectl -n dev get ingress solar-system -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
                  if [ -n "$HOST" ]; then break; fi
                  echo "Waiting for ALB DNS..."
                  sleep 15
                done
                echo "ALB_HOST=$HOST" >> $GITHUB_OUTPUT
              

            

            